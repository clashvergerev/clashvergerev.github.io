<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashvergerev.github.io/news/article-61861.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>0501-使用Python访问Kerberos环境下的Kafka(二)</title>
        <meta name="description" content="1 文档编写目的 在前面的文章Fayson介绍了一种Python访问Kerberos环境下Kafka的文章，参考《0500-使用Python2访问Kerberos环境下的Kafka》，本篇文章主要介绍" />
        <link rel="icon" href="/assets/website/img/clashvergerev/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Verge Rev节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashvergerev.github.io/news/article-61861.htm" />
    <meta property="og:site_name" content="Clash Verge Rev节点订阅站" />
    <meta property="og:title" content="0501-使用Python访问Kerberos环境下的Kafka(二)" />
    <meta property="og:image" content="https://clashvergerev.github.io/uploads/20240722-1/fa669720bc32eda2cf3d9ed1f98fd13f.webp" />
        <meta property="og:release_date" content="2025-02-23T09:48:45" />
    <meta property="og:updated_time" content="2025-02-23T09:48:45" />
        <meta property="og:description" content="1 文档编写目的 在前面的文章Fayson介绍了一种Python访问Kerberos环境下Kafka的文章，参考《0500-使用Python2访问Kerberos环境下的Kafka》，本篇文章主要介绍" />
        
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/bootstrap-4.5.0.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/animate.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/LineIcons.2.0.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/owl.carousel.2.3.4.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/owl.theme.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/nivo-lightbox.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/main.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/responsive.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="0501-使用Python访问Kerberos环境下的Kafka(二)">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-T6B4E54XZZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-T6B4E54XZZ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <header class="blog-hero-area">
                <div class="overlay">
            <span></span>
            <span></span>
        </div>
        <div class="navbar-area">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <nav class="navbar navbar-expand-lg">
                            <a class="navbar-brand" href="/">
                                                            <span>Clash Verge Rev</span>
                                                        </a>
                            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ml-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/client.htm">客户端</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                    </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div id="home">
            <div class="container">
                <div class="row justify-content-lg-center">
                    <div class="col-lg-10">
                        <div class="contents text-center">
                            <h1>0501-使用Python访问Kerberos环境下的Kafka(二)</h1>
                            <div class="post-meta">
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <section id="business-plan">
        <div class="container pt-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <h2> <a id="1__0" rel="nofollow"></a>1 文档编写目的</h2> <p>在前面的文章Fayson介绍了一种Python访问Kerberos环境下Kafka的文章，参考《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247495475&amp;idx=1&amp;sn=f889461ce032bc79f13e5b78f86aef35&amp;chksm=ec293f3adb5eb62cf3d2a9380f924f63de74321216a42cc5bd7ef4536bd26f767febda2851d5&amp;scene=21#wechat_redirect"  rel="nofollow">0500-使用Python2访问Kerberos环境下的Kafka</a>》，本篇文章主要介绍另一种方式访问Kerberos环境下的Kafka。</p> <p>在学习本篇文章内容前你还需要知道《<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://mp.weixin.qq.com/s?__biz=MzI4OTY3MTUyNg==&amp;mid=2247485371&amp;idx=1&amp;sn=e4c7cc77c2354634059295d5cf63b815&amp;chksm=ec2ad7b2db5d5ea46406cb9d26c95f7d6cf52740e90a131f97909bbfaa10c8d4a751cc2bf1e8&amp;scene=21#wechat_redirect"  rel="nofollow">如何通过Cloudera Manager为Kafka启用Kerberos及使用</a>》。</p> <ul> <li>内容概述：</li> </ul> <p>1.环境准备</p> <p>2.Python2示例代码</p> <p>3.访问验证</p> <p>4.总结</p> <ul> <li>测试环境：</li> </ul> <p>1.操作系统：Redhat7.4</p> <p>2.CM和CDH版本为5.15.0</p> <p>3.CDK2.2.0（0.10.2）</p> <p>4.Python 2.7.15</p> <h2> <a id="2__26" rel="nofollow"></a>2 环境准备</h2> <p>在使用Python访问Kafka前，还需要为Python环境安装相关的Kafka包，这里Fayson使用官网推荐使用的kafka-python依赖包。该依赖包的GitHub地址为：</p> <p>https://github.com/dpkp/kafka-python，关于kafka-python的详细说明可以参考GitHub。</p> <p>接下来准备Python访问Kafka的运行环境。</p> <p>1.安装操作系统依赖包</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 <span class="token operator">~</span><span class="token punctuation">]</span># yum <span class="token operator">-</span>y install gcc<span class="token operator">-</span>c<span class="token operator">++</span> python<span class="token operator">-</span>devel<span class="token punctuation">.</span>x86_64 cyrus<span class="token operator">-</span>sasl<span class="token operator">-</span>devel<span class="token punctuation">.</span>x86_64 </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/9d9dd36dfc94029e741bacf647b4ea56.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>2.安装gssapi依赖包，该依赖包为Python访问Kerberos环境的模块</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 <span class="token operator">~</span><span class="token punctuation">]</span># <span class="token operator">/</span>opt<span class="token operator">/</span>cloudera<span class="token operator">/</span>anaconda2<span class="token operator">/</span>bin<span class="token operator">/</span>pip install gssapi </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/514c28370518a4d7ff546cc97656ee7a.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>3.安装kafka-python依赖包</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 <span class="token operator">~</span><span class="token punctuation">]</span># <span class="token operator">/</span>opt<span class="token operator">/</span>cloudera<span class="token operator">/</span>anaconda2<span class="token operator">/</span>bin<span class="token operator">/</span>pip install kafka<span class="token operator">-</span>python </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/af7ad3ddd252ac488404feb1a98c40dc.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <h2> <a id="3_Python2_58" rel="nofollow"></a>3 Python2示例代码</h2> <p>1.如下为Python2访问Kerberos环境下Kafka示例代码</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 python_code<span class="token punctuation">]</span># more kafka_test<span class="token punctuation">.</span>py  <span class="token keyword">from</span> kafka <span class="token keyword">import</span> KafkaProducer  <span class="token keyword">import</span> logging logging<span class="token punctuation">.</span><span class="token function">basicConfig</span><span class="token punctuation">(</span>filename<span class="token operator">=</span><span class="token string">'example.log'</span><span class="token punctuation">,</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span><span class="token constant">DEBUG</span><span class="token punctuation">)</span>   conf <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token string">'bootstrap_servers'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cdh2.fayson.com:9092'</span><span class="token punctuation">,</span><span class="token string">'cdh3.fayson.com:9092'</span><span class="token punctuation">,</span><span class="token string">'cdh4.fayson.com:9092'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>         <span class="token string">'security_protocol'</span><span class="token punctuation">:</span> <span class="token string">'SASL_PLAINTEXT'</span><span class="token punctuation">,</span>         <span class="token string">'sasl_mechanism'</span><span class="token punctuation">:</span> <span class="token string">'GSSAPI'</span><span class="token punctuation">,</span>         <span class="token string">'client_id'</span><span class="token punctuation">:</span> <span class="token string">'testgroup'</span><span class="token punctuation">}</span>  producer <span class="token operator">=</span> <span class="token function">KafkaProducer</span><span class="token punctuation">(</span><span class="token operator">**</span>conf<span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>     producer<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">,</span> b<span class="token string">'some_message_bytes'</span><span class="token punctuation">)</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/5dcb433d924569ec404d961ed459c3b0.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>2.关于Kafka支持的属性配置可以参考如下地址</p> <p>https://github.com/dpkp/kafka-python/blob/master/kafka/producer/kafka.py</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/607de8e9145948e1ec81996619f99c67.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <h2> <a id="4__88" rel="nofollow"></a>4 访问验证</h2> <p>本文提供的示例代码为向Kerberos环境Kafka的test Topic中发送消息，在命令行使用Kafka提供的kafka-console-consumer命令消费Python示例生产的消息。</p> <p>1.准备客户端消费配置文件</p> <p>jaas.conf内容如下：</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh05 consumer<span class="token punctuation">]</span># more jaas<span class="token punctuation">.</span>conf  KafkaClient <span class="token punctuation">{<!-- --></span>    com<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>security<span class="token punctuation">.</span>auth<span class="token punctuation">.</span>module<span class="token punctuation">.</span>Krb5LoginModule required    useKeyTab<span class="token operator">=</span><span class="token boolean">true</span>    keyTab<span class="token operator">=</span><span class="token string">"/data/disk1/python_code/fayson.keytab"</span>    principal<span class="token operator">=</span><span class="token string">"fayson@FAYSON.COM"</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span> </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/6738dcc1e3c30b9ac115f10d15bb0bc2.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>client.properties内容如下：</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh05 consumer<span class="token punctuation">]</span># more client<span class="token punctuation">.</span>properties  security<span class="token punctuation">.</span>protocol<span class="token operator">=</span><span class="token constant">SASL_PLAINTEXT</span> sasl<span class="token punctuation">.</span>kerberos<span class="token punctuation">.</span>service<span class="token punctuation">.</span>name<span class="token operator">=</span>kafka group<span class="token punctuation">.</span>id<span class="token operator">=</span>testgroup </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/8d1828ea85b1728decd5c95c7b616565.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>2.在命令行运行如下脚本启动客户端消费</p> <pre><code class="prism language-javascript"><span class="token keyword">export</span> <span class="token constant">KAFKA_OPTS</span><span class="token operator">=</span><span class="token string">"-Djava.security.auth.login.config=/data/disk1/python_code/consumer/jaas.conf"</span> kafka<span class="token operator">-</span>console<span class="token operator">-</span>consumer <span class="token operator">--</span>topic test <span class="token operator">--</span><span class="token keyword">from</span><span class="token operator">-</span>beginning <span class="token operator">--</span>bootstrap<span class="token operator">-</span>server cdh2<span class="token punctuation">.</span>fayson<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9092</span><span class="token punctuation">,</span>cdh3<span class="token punctuation">.</span>fayson<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9092</span><span class="token punctuation">,</span>cdh4<span class="token punctuation">.</span>fayson<span class="token punctuation">.</span>com<span class="token punctuation">:</span><span class="token number">9092</span> <span class="token operator">--</span>consumer<span class="token punctuation">.</span>config <span class="token operator">/</span>data<span class="token operator">/</span>disk1<span class="token operator">/</span>python_code<span class="token operator">/</span>consumer<span class="token operator">/</span>client<span class="token punctuation">.</span>properties </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/172cd4d232235fc67ff4a9243198f495.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>3.在命令行运行python2的示例代码向test发送100条“some_message_bytes”消息</p> <pre><code class="prism language-javascript"><span class="token punctuation">[</span>root@cdh2 python_code<span class="token punctuation">]</span># kinit fayson <span class="token punctuation">[</span>root@cdh2 python_code<span class="token punctuation">]</span># <span class="token operator">/</span>opt<span class="token operator">/</span>cloudera<span class="token operator">/</span>anaconda2<span class="token operator">/</span>bin<span class="token operator">/</span>python kafka_test<span class="token punctuation">.</span>py </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/690610919126b20a88e4fda32d46706a.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <p>4.查看Kafka消费程序接收到两条消息</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20221230/a7b5c782612339d2d1478c89ffe06147.jpg" alt="0501-使用Python访问Kerberos环境下的Kafka(二)"></p> <h2> <a id="5__141" rel="nofollow"></a>5 总结</h2> <p>1.kafka-python依赖包需要Python的环境有2.7、3.4、3.5、3.6</p> <p>2.如果使用kafka-python访问Kerberos环境下的Kafka，需要安装gssapi依赖包，使用pip方式安装即可。</p> <p>3.相较于之前的访问方式，该方式会更简单一些，Python的依赖包不会显得太复杂。</p> <blockquote> <p>提示：代码块部分可以左右滑动查看噢<br /> 为天地立心，为生民立命，为往圣继绝学，为万世开太平。<br /> 温馨提示：如果使用电脑查看图片不清晰，可以使用手机打开文章单击文中的图片放大查看高清原图。</p> </blockquote></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-61273.htm">猫抓图片简笔画（猫抓的图片大全大图）</a></p>
                                        <p>下一个：<a href="/news/article-61862.htm">encodeURI()、encodeURIComponent()区别及使用场景</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-20854.htm" title="广州宠物领养中心在哪里啊最近（广州宠物领养中心官网）">广州宠物领养中心在哪里啊最近（广州宠物领养中心官网）</a></li>
                        <li class="py-2"><a href="/news/article-55555.htm" title="动物疫苗一般在哪里打的呢视频（动物疫苗一般在哪里打的呢视频讲解）">动物疫苗一般在哪里打的呢视频（动物疫苗一般在哪里打的呢视频讲解）</a></li>
                        <li class="py-2"><a href="/news/article-44187.htm" title="南京宠物领养中心电话号码多少（南京宠物收容中心电话）">南京宠物领养中心电话号码多少（南京宠物收容中心电话）</a></li>
                        <li class="py-2"><a href="/news/article-55005.htm" title="宠物领养网免费同城送货（宠物领养免费送到家）">宠物领养网免费同城送货（宠物领养免费送到家）</a></li>
                        <li class="py-2"><a href="/news/article-21721.htm" title="被猫抓伤多久过危险期（被猫抓伤了用不用***）">被猫抓伤多久过危险期（被猫抓伤了用不用***）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-30-node-share-links.htm" title="「1月30日」最高速度19M/S，2025年Clsah Verge每天更新免费节点订阅地址">「1月30日」最高速度19M/S，2025年Clsah Verge每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-29-today-clash-verge-rev-node.htm" title="「11月29日」最高速度22.5M/S，2024年Clsah Verge每天更新免费节点订阅链接">「11月29日」最高速度22.5M/S，2024年Clsah Verge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-5-free-high-speed-nodes.htm" title="「12月5日」最高速度19.6M/S，2024年Clsah Verge每天更新免费节点订阅链接">「12月5日」最高速度19.6M/S，2024年Clsah Verge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/news/article-34887.htm" title="Apache Hudi 如何加速传统的批处理模式">Apache Hudi 如何加速传统的批处理模式</a></li>
                        <li class="py-2"><a href="/news/article-23603.htm" title=".NET 6上的WebView2体验_在线工具">.NET 6上的WebView2体验_在线工具</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">69</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <footer>
    <section id="footer-Content">
        <div class="copyright">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="site-info text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Clash Verge Rev节点订阅站</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</footer>
<a href="#" class="back-to-top">
    <i class="lni lni-chevron-up"></i>
</a>
<div id="preloader">
    <div class="loader" id="loader-1"></div>
</div>
<script src="/assets/website/js/frontend/clashvergerev/vendor/modernizr-3.7.1.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/vendor/jquery-3.5.1-min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/popper.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/bootstrap-4.5.0.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/owl.carousel.2.3.4.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/nivo-lightbox.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/jquery.magnific-popup.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/form-validator.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/contact-form-script.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>