<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://clashvergerev.github.io/news/article-49676.htm" />
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具</title>
        <meta name="description" content="前几篇都是手动录入或随机函数产生的数据。实际有许多类型的文件，以及许多方法，用它们从文件中提取数据来图形化。 比如之前python基础(12)介绍打开文件的方式，可直接读取文件中的数据，扩大了我们的数" />
        <link rel="icon" href="/assets/website/img/clashvergerev/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Clash Verge Rev节点订阅站">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://clashvergerev.github.io/news/article-49676.htm" />
    <meta property="og:site_name" content="Clash Verge Rev节点订阅站" />
    <meta property="og:title" content="python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具" />
    <meta property="og:image" content="https://clashvergerev.github.io/uploads/20240722-1/b113c16956a231db260f1dfc1b46d932.webp" />
        <meta property="og:release_date" content="2025-02-01T07:15:36" />
    <meta property="og:updated_time" content="2025-02-01T07:15:36" />
        <meta property="og:description" content="前几篇都是手动录入或随机函数产生的数据。实际有许多类型的文件，以及许多方法，用它们从文件中提取数据来图形化。 比如之前python基础(12)介绍打开文件的方式，可直接读取文件中的数据，扩大了我们的数" />
        
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/bootstrap-4.5.0.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/animate.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/LineIcons.2.0.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/owl.carousel.2.3.4.min.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/owl.theme.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/nivo-lightbox.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/main.css">
    <link rel="stylesheet" href="/assets/website/css/clashvergerev/responsive.css">

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-T6B4E54XZZ"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-T6B4E54XZZ');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <header class="blog-hero-area">
                <div class="overlay">
            <span></span>
            <span></span>
        </div>
        <div class="navbar-area">
            <div class="container">
                <div class="row">
                    <div class="col-lg-12">
                        <nav class="navbar navbar-expand-lg">
                                                        <a class="navbar-brand" href="/">
                                Clash Verge Rev
                            </a>
                                                        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                                <span class="toggler-icon"></span>
                            </button>
                            <div class="collapse navbar-collapse sub-menu-bar" id="navbarSupportedContent">
                                <ul id="nav" class="navbar-nav ml-auto">
                                                                        <li class="nav-item">
                                        <a href="/">首页</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/free-nodes/">免费节点</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/paid-subscribe/">推荐机场</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="/news/">新闻资讯</a>
                                    </li>
                                                                        <li class="nav-item">
                                        <a href="#">关于</a>
                                    </li>
                                    <li class="nav-item">
                                        <a href="#">联系</a>
                                    </li>
                                </ul>
                            </div>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <div id="home">
            <div class="container">
                <div class="row justify-content-lg-center">
                    <div class="col-lg-10">
                        <div class="contents text-center">
                            <h1>python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具</h1>
                            <div class="post-meta">
                                <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / <span>正文</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <section id="business-plan">
        <div class="container pt-5">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>前几篇都是手动录入或随机函数产生的数据。实际有许多类型的文件，以及许多方法，用它们从文件中提取数据来图形化。</p> <p>比如之前python基础(12)介绍打开文件的方式，可直接读取文件中的数据，扩大了我们的数据来源。下面详细介绍从文件中加载数据。</p> <p>一、使用内置的 csv 模块加载CSV文件</p> <p>CSV文件是一种特殊的文本文件，文件中的数据以逗号作为分隔符，很适合进行数据的解析。先用excle建立如下表格和数据，另存为csv格式文件，放到代码目录下。</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/88cfedb87e8e79ffd01b9bbd5a40f10e.jpg" alt="python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具"></p> <p>包含在Python标准库中自带CSV 模块，我们只需要import进来就能使用。比如我们需要将上面的CSV文件都打印出来，代码 如下:</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span> csv<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">import csv 用来导入csv模块</span><span style="color: rgba(0, 0, 0, 1)"> filename</span>=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">E:\WorkSpace\python\coding\score.csv</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">文件保存的绝对路径，如果在代码目录文件下，可以直接用文件名</span> with open(filename) as file_csv:<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">是不是忘记了如何打开文件？打开文件，并将结果文件对象存储在file_csv中</span>     reader = csv.reader(file_csv)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">直接调读取 用csv.read()读取文件内容</span><span style="color: rgba(0, 0, 255, 1)">for</span> row<span style="color: rgba(0, 0, 255, 1)">in</span> reader:<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">   用for循环打印每一行</span><span style="color: rgba(0, 0, 255, 1)">print</span>(row)</pre> </div> <p>运行结果如下：</p> <div class="cnblogs_code"> <pre>[<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Name</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Grade</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Class</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Age</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">mathscore</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Englishscore</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Lucy</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">7</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">14</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">95</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">86</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">bush</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">8</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">15</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">80</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">75</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">lily</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">7</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">3</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">14</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">93</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">95</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Jack</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">8</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">14</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">87</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">84</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Mary</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">9</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">1</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">15</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">85</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">86</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">philip</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">7</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">3</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">14</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">90</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">92</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">] [</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Liming</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">9</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">2</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">16</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">99</span><span style="color: rgba(128, 0, 0, 1)">'</span>,<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">87</span><span style="color: rgba(128, 0, 0, 1)">'</span>]</pre> </div> <p>&nbsp;1、打印文件头及其位置</p> <p>读入文件，是为了获取其中的数据，需要将相关信息进行分离，先看看如何读出头即文件的第一行，&nbsp;next()返回文件中的下一行。</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span> csv<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">import csv 用来导入csv模块</span><span style="color: rgba(0, 0, 0, 1)"> filename</span>=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">E:\WorkSpace\python\coding\score.csv</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">文件保存的绝对路径</span> with open(filename) as file_csv:<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">是不是忘记了如何打开文件？打开文件，并将结果文件对象存储在file_csv中</span>     reader = csv.reader(file_csv)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">直接调读取 用csv.read()读取文件内容</span>     header_row = next(reader)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">模块csv包含<span style="color: rgba(255, 0, 0, 1)">函数 next() ，调用它并将阅读器对象传递给它时，它将返回文件中的下一行</span>。</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">调用了next()一次，因此得到的是文件的第一行，其中包含文件头<br/></span></pre> <p><span style="color: rgba(0, 128, 0, 1)">&nbsp; #for row in reader: # 用for循环打印每一行</span><br /><span style="color: rgba(0, 128, 0, 1)">&nbsp; &nbsp; &nbsp; 　#　print(row)</span></p> <pre><span style="color: rgba(0, 0, 255, 1)">for</span> index, column_header<span style="color: rgba(0, 0, 255, 1)">in</span> enumerate(header_row):<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">对列表调用了enumerate()来获取每个元素的索引及其值</span><span style="color: rgba(0, 0, 255, 1)">print</span>(index, column_header)</pre> </div> <p>运行后的结果如下所示：</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">0 Name 1 Grade 2 Class 3 Age 4 mathscore 5 Englishscore</pre> </div> <p>　提取其中索引，即name的索引为0，Grade的索引为1，知道了索引便可以读取其中的任何数据，比如我们要打印出mathscore，索引为4，于是代码如下：</p> <div class="cnblogs_code"> <pre>    scores =<span style="color: rgba(0, 0, 0, 1)">[] 定义一个空的list</span><span style="color: rgba(0, 0, 255, 1)">for</span> row<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> reader:         scores.append(int(row[</span>4]))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">读取的文件，默认为字符串，用int()转换为数字。</span><span style="color: rgba(0, 0, 255, 1)">print</span>(scores)</pre> </div> <p>运行结果：</p> <div class="cnblogs_Highlighter"> <pre class="brush:python;gutter:true;">[95, 80, 93, 87, 85, 90, 99]</pre> </div> <p>　接下来，制作图表展示一下，先把mathscore和englishscore分数做个柱状对比。代码如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> matplotlib.pyplot as plt</span><span style="color: rgba(0, 0, 255, 1)">import</span> csv<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">import csv 用来导入csv模块</span><span style="color: rgba(0, 0, 0, 1)"> filename</span>=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">E:\WorkSpace\python\coding\score.csv</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">文件保存的绝对路径</span> with open(filename) as file_csv:<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">是不是忘记了如何打开文件？打开文件，并将结果文件对象存储在file_csv中</span>     reader = csv.reader(file_csv)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">直接调读取 用csv.read()读取文件内容</span>     header_row = next(reader)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">模块csv包含函数 next() ，调用它并将阅读器对象传递给它时，它将返回文件中的下一行。</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">调用了 next() 一次，因此得到的是文件的第一行，其中包含文件头</span>     mathscores =[]<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">定义两个列表</span>     englishscores=<span style="color: rgba(0, 0, 0, 1)">[]</span><span style="color: rgba(0, 0, 255, 1)">for</span> row<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> reader:         mathscores.append(int(row[</span>4]))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">读取索引为4的数据，默认为字符串，用int()转换为数字。</span>         englishscores.append(int(row[5]))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">读取索引为5的数据，用int()转换为数字。</span><span style="color: rgba(0, 0, 0, 1)">         plt.bar([</span>1,3,5,7,9,11,13],mathscores,label=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">math</span><span style="color: rgba(128, 0, 0, 1)">'</span>,color=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">#FF2204</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">)      plt.bar([</span>2,4,6,8,10,12,14],englishscores, label=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">englis</span><span style="color: rgba(128, 0, 0, 1)">'</span>, color=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">g</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">) plt.legend() plt.title(</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">scores</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 0, 0, 1)">)  plt.show()</span></pre> </div> <p>已将那些打印相关代码删除。看运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/2b2d25e84303f24431ca67395413415b.jpg" alt="python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具"></p> <p>&nbsp;接下来，我们读取文件 ，并根据文件中的时间来绘制图表</p> <p>新建一个年份的数据（真的是胡编乱造的数据），第一列是年份，第二列每年毕业的人数，第三列是每年申请人数，如图所示：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/b3b676b799c19f07ac599512cabf9d3b.jpg" alt="python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具"></p> <p>要求：</p> <p>1，按年份分别显示出每年两者的人数，并用不同的颜色表示；</p> <p>2、两者间也用其他颜色进行填充。</p> <p>完成代码如下：</p> <div class="cnblogs_code"> <pre><span style="color: rgba(0, 0, 255, 1)">import</span><span style="color: rgba(0, 0, 0, 1)"> matplotlib.pyplot as plt</span><span style="color: rgba(0, 0, 255, 1)">import</span> csv<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">import csv 用来导入csv模块</span><span style="color: rgba(0, 0, 255, 1)">from</span> datetime<span style="color: rgba(0, 0, 255, 1)">import</span> datetime<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">引入时间相关模块</span><span style="color: rgba(0, 0, 0, 1)"> filename</span>=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">E:\WorkSpace\python\coding\graduatesNumbers.csv</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">文件保存的绝对路径</span> with open(filename) as file_csv:<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">是不是忘记了如何打开文件？打开文件，并将结果文件对象存储在file_csv中</span>     reader = csv.reader(file_csv)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">直接调读取 用csv.read()读取文件内容</span>     header_row =<span style="color: rgba(0, 0, 0, 1)"> next(reader)        dates</span>=<span style="color: rgba(0, 0, 0, 1)">[]                                 numbers</span>=<span style="color: rgba(0, 0, 0, 1)">[]     application_numbers</span>=<span style="color: rgba(0, 0, 0, 1)">[]</span><span style="color: rgba(0, 0, 255, 1)">for</span> row<span style="color: rgba(0, 0, 255, 1)">in</span><span style="color: rgba(0, 0, 0, 1)"> reader:          current_date</span>= datetime.strptime(row[0],<span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">%Y/%m/%d</span><span style="color: rgba(128, 0, 0, 1)">"</span>)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">年份，strptime()日期格式转化为字符串格式的函数</span><span style="color: rgba(0, 0, 0, 1)">        dates.append(current_date)         numbers.append(int(row[</span>1]))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">读取索引为1的数据，默认为字符串，用int()转换为数字，即Numbers of graduates 。</span>         application_numbers.append(int(row[2]))<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">读取索引为2的数据，即Number of applicants</span><span style="color: rgba(0, 0, 0, 1)">         plt.plot(dates,numbers,label</span>=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Numbers of graduate</span><span style="color: rgba(128, 0, 0, 1)">'</span>, c=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">red</span><span style="color: rgba(128, 0, 0, 1)">'</span>)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">显示第一条线</span> plt.plot(dates,application_numbers,label=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Number of applicant</span><span style="color: rgba(128, 0, 0, 1)">'</span>, c=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">green</span><span style="color: rgba(128, 0, 0, 1)">'</span>)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">显示第二条线application_numbers折线</span> plt.fill_between(dates,numbers, application_numbers, facecolor=<span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">blue</span><span style="color: rgba(128, 0, 0, 1)">'</span>, alpha=0.5)<span style="color: rgba(0, 128, 0, 1)">#</span><span style="color: rgba(0, 128, 0, 1)">在两线之间填充颜色  alpha透明度</span><span style="color: rgba(0, 0, 0, 1)">     plt.title(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">The numbers of graduate</span><span style="color: rgba(128, 0, 0, 1)">"</span>,fontsize=24<span style="color: rgba(0, 0, 0, 1)">) plt.xlabel(</span><span style="color: rgba(128, 0, 0, 1)">'</span><span style="color: rgba(128, 0, 0, 1)">Years</span><span style="color: rgba(128, 0, 0, 1)">'</span>, fontsize=16<span style="color: rgba(0, 0, 0, 1)">) plt.ylabel(</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">The numbers</span><span style="color: rgba(128, 0, 0, 1)">"</span>, fontsize=16<span style="color: rgba(0, 0, 0, 1)">) plt.legend() plt.show()</span></pre> </div> <p>实际运行结果如下：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/8d2bd9b51b6d4e9b3110ac10c061e237.jpg" alt="python数据可视化-matplotlib入门(6)-从文件中加载数据_在线工具"></p> <p>&nbsp;除了直接读取文件外，数据还有众多其他来源，比如后期涉及的爬虫等。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-49674.htm">SpringBoot2.3应用制作Docker镜像详解</a></p>
                                        <p>下一个：<a href="/news/article-50196.htm">python 元组传参 *args 字典传参 **kwargs 的用法</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-49154.htm" title="狗粮生产机器设备（鱼饲料生产加工设备）">狗粮生产机器设备（鱼饲料生产加工设备）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-16-clash-verge-rev-node.htm" title="「1月16日」最高速度20.1M/S，2025年Clsah Verge每天更新免费节点订阅地址">「1月16日」最高速度20.1M/S，2025年Clsah Verge每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-14-clash-verge-rev-github.htm" title="「10月14日」最高速度21.1M/S，2024年Clsah Verge每天更新免费节点订阅链接">「10月14日」最高速度21.1M/S，2024年Clsah Verge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-24-free-high-speed-nodes.htm" title="「12月24日」最高速度22.8M/S，2024年Clsah Verge每天更新免费节点订阅地址">「12月24日」最高速度22.8M/S，2024年Clsah Verge每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-28250.htm" title="动物疫苗品牌排名前十名 动物疫苗品牌排名前十名有哪些">动物疫苗品牌排名前十名 动物疫苗品牌排名前十名有哪些</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-7-free-high-speed-nodes.htm" title="「1月7日」最高速度18.8M/S，2025年Clsah Verge每天更新免费节点订阅地址">「1月7日」最高速度18.8M/S，2025年Clsah Verge每天更新免费节点订阅地址</a></li>
                        <li class="py-2"><a href="/news/article-22232.htm" title="狗粮加工厂利润成本分析报告怎么写（狗粮加工厂投资多少钱）">狗粮加工厂利润成本分析报告怎么写（狗粮加工厂投资多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-33467.htm" title="初中毕业可以学兽医拿证吗（初中毕业可以学兽医拿证吗知乎）">初中毕业可以学兽医拿证吗（初中毕业可以学兽医拿证吗知乎）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-10-15-free-high-speed-nodes.htm" title="「10月15日」最高速度22.2M/S，2024年Clsah Verge每天更新免费节点订阅链接">「10月15日」最高速度22.2M/S，2024年Clsah Verge每天更新免费节点订阅链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-1-clash-verge-rev-nodes.htm" title="「1月1日」最高速度21.9M/S，2025年Clsah Verge每天更新免费节点订阅地址">「1月1日」最高速度21.9M/S，2025年Clsah Verge每天更新免费节点订阅地址</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <footer>
    <section id="footer-Content">
        <div class="copyright">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <div class="site-info text-center">
                    <p>
                        <a href="/">首页</a> | 
                        <a href="/free-node/">免费节点</a> | 
                        <a href="/news/">新闻资讯</a> |
                        <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                            <a href="/">Clash Verge Rev节点订阅站</a> 版权所有
                            <br />
                            Powered by WordPress
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</footer>
<a href="#" class="back-to-top">
    <i class="lni lni-chevron-up"></i>
</a>
<div id="preloader">
    <div class="loader" id="loader-1"></div>
</div>
<script src="/assets/website/js/frontend/clashvergerev/vendor/modernizr-3.7.1.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/vendor/jquery-3.5.1-min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/popper.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/bootstrap-4.5.0.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/owl.carousel.2.3.4.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/nivo-lightbox.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/jquery.magnific-popup.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/form-validator.min.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/contact-form-script.js"></script>
<script src="/assets/website/js/frontend/clashvergerev/main.js"></script>
<script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
<script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>